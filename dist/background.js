import{B as n}from"./assets/browser-polyfill-CqyFTn3I.js";import"./assets/_commonjsHelpers-CqkleIqs.js";const a={openBlockedSites:(e,o)=>{const t=n.runtime.getURL("blockedSites.html");n.tabs.create({url:t}).then(()=>{o({success:!0})}).catch(r=>{console.error("Error opening blocked sites:",r),o({success:!1})})}},l=(e,o)=>{if(!(!e||!o))try{const t=new URL(e).hostname.toLowerCase(),r=new URL(o).hostname.toLowerCase();return t===r||t.endsWith(`.${r}`)}catch(t){return console.error("Error parsing URL:",t),null}};let s=[];n.storage.local.get("blockedSites").then(({blockedSites:e})=>{s=e||[]});n.storage.onChanged.addListener((e,o)=>{o==="local"&&e.blockedSites&&(s=e.blockedSites.newValue||[])});n.runtime.onMessage.addListener((e,o,t)=>{const r=a[e.action];if(r){const c=r(e,t);return c instanceof Promise?c:!0}else console.warn("Unknown action:",e.action),alert("Unknown action: "+e.action)});n.tabs.onUpdated.addListener(async(e,o,t)=>{if(o.url&&t.url){for(const r of s)if(l(t.url,r)){n.tabs.update(e,{url:n.runtime.getURL("blockedSite.html")});break}}});
